{"ast":null,"code":"var _jsxFileName = \"D:\\\\Time saver\\\\src\\\\pages\\\\EventPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [event, setEvent] = useState(null);\n\n  // In a real app, you'd fetch this from a global state or API\n  // For now, we'll simulate event data based on the ID\n  useEffect(() => {\n    // Simulate fetching event data\n    const mockEvent = {\n      id: id,\n      title: \"Sample Event\",\n      description: \"This is a sample event description. In a real application, this would be fetched from your data source.\",\n      time: \"09:00\",\n      duration: 60,\n      date: new Date().toISOString().split('T')[0]\n    };\n    setEvent(mockEvent);\n  }, [id]);\n  const handleEdit = () => {\n    alert('Edit functionality would be implemented here');\n  };\n  const handleDelete = () => {\n    if (window.confirm('Are you sure you want to delete this event?')) {\n      alert('Delete functionality would be implemented here');\n      navigate('/');\n    }\n  };\n  if (!event) {\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '20px',\n          textAlign: 'center'\n        },\n        children: \"Loading event details...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0,\n      y: 50\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    exit: {\n      opacity: 0,\n      y: -50\n    },\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: () => navigate('/'),\n        style: {\n          marginBottom: '20px'\n        },\n        children: \"\\u2190 Back to Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Event Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'white',\n          padding: '30px',\n          borderRadius: '8px',\n          marginTop: '20px',\n          boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Event ID: \", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Event details will be displayed here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            style: {\n              marginRight: '10px'\n            },\n            children: \"Edit Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            children: \"Delete Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(EventPage, \"GSQ6L0A8wJTYC4pRYEtfaQk3RYE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EventPage;\nexport default EventPage;\nvar _c;\n$RefreshReg$(_c, \"EventPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","motion","jsxDEV","_jsxDEV","EventPage","_s","id","navigate","event","setEvent","mockEvent","title","description","time","duration","date","Date","toISOString","split","handleEdit","alert","handleDelete","window","confirm","div","initial","opacity","animate","className","children","style","padding","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","y","exit","onClick","marginBottom","background","borderRadius","marginTop","boxShadow","marginRight","_c","$RefreshReg$"],"sources":["D:/Time saver/src/pages/EventPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\n\r\nfunction EventPage() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [event, setEvent] = useState(null);\r\n\r\n  // In a real app, you'd fetch this from a global state or API\r\n  // For now, we'll simulate event data based on the ID\r\n  useEffect(() => {\r\n    // Simulate fetching event data\r\n    const mockEvent = {\r\n      id: id,\r\n      title: \"Sample Event\",\r\n      description: \"This is a sample event description. In a real application, this would be fetched from your data source.\",\r\n      time: \"09:00\",\r\n      duration: 60,\r\n      date: new Date().toISOString().split('T')[0]\r\n    };\r\n    setEvent(mockEvent);\r\n  }, [id]);\r\n\r\n  const handleEdit = () => {\r\n    alert('Edit functionality would be implemented here');\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (window.confirm('Are you sure you want to delete this event?')) {\r\n      alert('Delete functionality would be implemented here');\r\n      navigate('/');\r\n    }\r\n  };\r\n\r\n  if (!event) {\r\n    return (\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        className=\"container\"\r\n      >\r\n        <div style={{ padding: '20px', textAlign: 'center' }}>\r\n          Loading event details...\r\n        </div>\r\n      </motion.div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 50 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      exit={{ opacity: 0, y: -50 }}\r\n      className=\"container\"\r\n    >\r\n      <div style={{ padding: '20px' }}>\r\n        <button \r\n          className=\"btn btn-secondary\"\r\n          onClick={() => navigate('/')}\r\n          style={{ marginBottom: '20px' }}\r\n        >\r\n          ‚Üê Back to Schedule\r\n        </button>\r\n        \r\n        <h1>Event Details</h1>\r\n        \r\n        <div style={{ \r\n          background: 'white', \r\n          padding: '30px', \r\n          borderRadius: '8px',\r\n          marginTop: '20px',\r\n          boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\r\n        }}>\r\n          <h2>Event ID: {id}</h2>\r\n          <p>Event details will be displayed here.</p>\r\n          \r\n          <div style={{ marginTop: '20px' }}>\r\n            <button className=\"btn btn-primary\" style={{ marginRight: '10px' }}>\r\n              Edit Event\r\n            </button>\r\n            <button className=\"btn btn-secondary\">\r\n              Delete Event\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default EventPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}